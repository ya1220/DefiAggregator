{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Go\\\\src\\\\pusher\\\\defi_aggregator\\\\source\\\\ui\\\\src\\\\Slider.js\";\nimport React from 'react';\nimport { Form, Segment, Button, Popup } from 'semantic-ui-react';\nimport styled from 'styled-components';\n/*\nconst sliderThumbStyles = (props) => (`\n  width: 25px;\n  height: 25px;\n  background: ${props.color};\n  cursor: pointer;\n  outline: 5px solid #333;\n  opacity: ${props.opacity};\n  -webkit-transition: .2s;\n  transition: opacity .2s;\n`);\n\nconst Styles = styled.div`\n  display: flex;\n  color: #888;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  .value {\n    flex: 1;\n    font-size: 2rem;\n  }\n  .slider {\n    flex: 6;\n    -webkit-appearance: none;\n    width: 50%;\n    height: 10px;\n    border-radius: 5px;\n    background: #efefef;  \n    outline: none;\n    &::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      ${props => sliderThumbStyles(props)}\n    }\n    &::-moz-range-thumb {\n      ${props => sliderThumbStyles(props)}\n    }\n  }\n`;*/\n\nconst sliderThumbStyles = props => `\n  width: 20px;\n  height: 20px;\n  background: rgb(81, 146, 253);\n  border-radius: 50px;\n  cursor: pointer;\n  -webkit-transition: .2s;\n  transition: opacity .2s;\n`;\n\nconst Styles = styled.div`\n  display: flex;\n  align-items: center;\n  color: #888;\n  .value {\n    flex: 1;\n    font-size: 2rem;\n  }\n  .slider {\n    flex: 6;\n    -webkit-appearance: none;\n    width: 75%; \n    margin-right: 15px;\n    height: 15px;\n    border-radius: 10px;\n    background: #efefef;\n    outline: none;\n    &::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      ${props => sliderThumbStyles(props)}\n    }\n    &::-moz-range-thumb {\n      ${props => sliderThumbStyles(props)}\n    }\n  }\n`;\n_c = Styles;\nexport default class Slider2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      risk_setting: ''\n    };\n\n    this.handleOnChange = e => this.setState({\n      risk_setting: e.target.value\n    });\n\n    this.onSubmit = this._onSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui container\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Enter Risk Tolerance \", /*#__PURE__*/_jsxDEV(Popup, {\n              content: \"Please enter your risk aversion level on a scale of 0 to 10. 0: very risk averse; 10: very risk on.\",\n              position: \"top center\",\n              trigger: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"info circle icon portfolio-popup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 190\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputLabel risk\",\n            children: \"0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Styles, {\n            opacity: this.state.risk_setting > 10 ? this.state.risk_setting / 10 : .1,\n            color: this.props.color,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: 0,\n              max: 10,\n              value: this.state.risk_setting,\n              className: \"slider\",\n              onChange: this.handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this);\n  }\n\n  _onSubmit() {\n    const payload = {\n      risk_setting: parseFloat(this.state.risk_setting)\n    };\n    fetch('http://localhost:8080/risk_setting', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Styles\");","map":{"version":3,"sources":["C:/Go/src/pusher/defi_aggregator/source/ui/src/Slider.js"],"names":["React","Form","Segment","Button","Popup","styled","sliderThumbStyles","props","Styles","div","Slider2","Component","state","risk_setting","handleOnChange","e","setState","target","value","onSubmit","_onSubmit","bind","render","color","payload","parseFloat","fetch","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Segment, Button, Popup } from 'semantic-ui-react'\nimport styled from 'styled-components';\n\n/*\nconst sliderThumbStyles = (props) => (`\n  width: 25px;\n  height: 25px;\n  background: ${props.color};\n  cursor: pointer;\n  outline: 5px solid #333;\n  opacity: ${props.opacity};\n  -webkit-transition: .2s;\n  transition: opacity .2s;\n`);\n\nconst Styles = styled.div`\n  display: flex;\n  color: #888;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  .value {\n    flex: 1;\n    font-size: 2rem;\n  }\n  .slider {\n    flex: 6;\n    -webkit-appearance: none;\n    width: 50%;\n    height: 10px;\n    border-radius: 5px;\n    background: #efefef;  \n    outline: none;\n    &::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      ${props => sliderThumbStyles(props)}\n    }\n    &::-moz-range-thumb {\n      ${props => sliderThumbStyles(props)}\n    }\n  }\n`;*/\n\nconst sliderThumbStyles = (props) => (`\n  width: 20px;\n  height: 20px;\n  background: rgb(81, 146, 253);\n  border-radius: 50px;\n  cursor: pointer;\n  -webkit-transition: .2s;\n  transition: opacity .2s;\n`);\n\nconst Styles = styled.div`\n  display: flex;\n  align-items: center;\n  color: #888;\n  .value {\n    flex: 1;\n    font-size: 2rem;\n  }\n  .slider {\n    flex: 6;\n    -webkit-appearance: none;\n    width: 75%; \n    margin-right: 15px;\n    height: 15px;\n    border-radius: 10px;\n    background: #efefef;\n    outline: none;\n    &::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      ${props => sliderThumbStyles(props)}\n    }\n    &::-moz-range-thumb {\n      ${props => sliderThumbStyles(props)}\n    }\n  }\n`;\n\nexport default class Slider2 extends React.Component {\n\n    state = {\n        risk_setting: ''\n    };\n\n    handleOnChange = (e) => this.setState({ risk_setting: e.target.value });\n\n    onSubmit = this._onSubmit.bind(this);\n\n    render() {\n        return (\n          <Segment>\n            <div className=\"ui container\">\n              <Form onSubmit={this.onSubmit}>\n                <h3>Enter Risk Tolerance <Popup content=\"Please enter your risk aversion level on a scale of 0 to 10. 0: very risk averse; 10: very risk on.\" position=\"top center\" trigger={<i class=\"info circle icon portfolio-popup\"></i>} /></h3>\n                <div className=\"inputLabel risk\">0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 10</div>\n                <Styles opacity={this.state.risk_setting > 10 ? (this.state.risk_setting / 10) : .1} color={this.props.color}>\n                  <input type=\"range\" min={0} max={10} value={this.state.risk_setting} className=\"slider\" onChange={this.handleOnChange}/>\n                  <Button type='submit'>Submit</Button>\n                </Styles>\n              </Form>\n            </div>\n          </Segment>\n        );\n    }\n\n    _onSubmit() {\n        const payload = {\n            risk_setting: parseFloat(this.state.risk_setting)\n        };\n        fetch('http://localhost:8080/risk_setting', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}